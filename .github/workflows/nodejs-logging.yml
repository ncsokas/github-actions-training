name: Node.js CI Logging

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    
    steps:
      # Step 1: Checkout code
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Dynamically create package.json
      - name: Create package.json
        run: |
          echo "::group::Creating package.json"
          echo '{
            "name": "github-actions-training",
            "version": "1.0.0",
            "scripts": {
              "test": "echo \\"Running test...\\\"",
              "build": "echo \\"Building project...\\\""
            }
          }' > package.json
          echo "::endgroup::"

      # Step 3: Set up Node.js
      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Step 4: Install dependencies
      - name: Install Dependencies
        run: |
          echo "::group::Installing dependencies"
          npm install
          echo "::endgroup::"

  build:
    runs-on: ubuntu-latest
    needs: setup
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Step 1: Build the application
      - name: Build Project
        run: |
          echo "::group::Building project"
          npm run build --if-present || echo "::warning::Build script not found."
          echo "::endgroup::"

  test:
    runs-on: ubuntu-latest
    needs: [setup, build]
    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      # Step 1: Run tests
      - name: Run Tests
        run: |
          echo "::group::Running tests"
          npm test || echo "::error::Tes
